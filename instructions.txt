create models:
    php artisan make:model Model/Question -mfr
    php artisan make:model Model/Reply -mfr
    php artisan make:model Model/Category -mfr
    php artisan make:model Model/Like -mfr

Question migration:

    $table->string('title');
    $table->string('slug');
    $table->text('body');

    $table->integer('category_id')->unsigned();
    $table->integer('user_id')->unsigned();

Reply migration:

    $table->text('body');

    $table->integer('user_id')->unsigned();
    $table->integer('question_id')->unsigned();

    $table->foreign('question_id')->references('id')->on('questions')->onDelete('cascade');

Like migration:
 
    $table->integer('user_id')->unsigned();
    $table->integer('reply_id')->unsigned();

Category migration:

    $table->string('name');
    $table->string('slug');

Model/Question:

    public function user() {
        return $this->belongsTo(User::class);
    }

    public function replies() {
        return $this->hasMany(Reply::class);
    }

    public function category() {
        return $this->hasMany(Category::class);
    }

Model/Reply:

    public function question() {
        return $this->belongsTo(Question::class);
    }

    public function user() {
        return $this->belongsTo(User::class);
    }

    public function like() {
        return $this->hasMany(Like::class);
    }

User:

    public function question() {
        return $this->hasMany(Question::class)
    }

Factory:
    Question:
        $title = $faker->sentence()
        
        'title' => $title,
        'slug' => str_slug($title),
        body => $faker->text(),
        'category_id' => function() {
            return Category::all()->random();
        },
        'user_id' => function() {
            return User::all()->random();
        },
     
     ...
     finish factory and seeding database

php artisan migrate:fresh

------------------------
API ROUTE


-------------------------

php artisan make:resource QuestionResource



--------------------------
JWT 
composer.json:
    "require": {
        ...
        "tymon/jwt-auth": "~1.0.0-rc.2"
    },

composer update

php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider"

php artisan jwt:secret

copy code to user.php 

Inside the config/auth.php: 
    'defaults' => [
    'guard' => 'api',
    'passwords' => 'users',
],

    ...

    'guards' => [
        'api' => [
            'driver' => 'jwt',
            'provider' => 'users',
        ],
    ],

copy code to ROUTE


php artisan make:controller AuthController

copy code over to AuthController

ran into JWT middleware not defined, copy JWT middleware over

test your API:
    /me, /refresh
        1. bearer
        2. ?token=...
        3. body
    
    /logout
        body, token
    
    /login
        body, email, password